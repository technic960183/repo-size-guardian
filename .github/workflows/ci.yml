name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install package in development mode
      run: |
        pip install -e .
    
    - name: Install coverage
      if: matrix.python-version == '3.11'
      run: |
        pip install coverage
    
    - name: Run tests with coverage
      if: matrix.python-version == '3.11'
      run: |
        coverage run -m unittest discover tests -v
    
    - name: Run tests without coverage
      if: matrix.python-version != '3.11'
      run: |
        python -m unittest discover tests -v
    
    - name: Generate coverage report
      if: matrix.python-version == '3.11'
      run: |
        coverage xml
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        fail_ci_if_error: true
    
    - name: Test CLI no-op
      run: |
        python -m repo_size_guardian --version

  self-test:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Test action (placeholder)
      uses: ./
      with:
        max_text_size_kb: 1000
        max_binary_size_kb: 200
        fail_on: warn